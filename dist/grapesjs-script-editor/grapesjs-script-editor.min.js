/*! grapesjs-script-editor - 1.0.3 */
!(function (t, e) {
  'object' == typeof exports && 'object' == typeof module
    ? (module.exports = e())
    : 'function' == typeof define && define.amd
    ? define([], e)
    : 'object' == typeof exports
    ? (exports['grapesjs-script-editor'] = e())
    : (t['grapesjs-script-editor'] = e());
})(window, function () {
  return (function (t) {
    var e = {};
    function r(n) {
      if (e[n]) return e[n].exports;
      var o = (e[n] = { i: n, l: !1, exports: {} });
      return t[n].call(o.exports, o, o.exports, r), (o.l = !0), o.exports;
    }
    return (
      (r.m = t),
      (r.c = e),
      (r.d = function (t, e, n) {
        r.o(t, e) || Object.defineProperty(t, e, { enumerable: !0, get: n });
      }),
      (r.r = function (t) {
        'undefined' != typeof Symbol &&
          Symbol.toStringTag &&
          Object.defineProperty(t, Symbol.toStringTag, { value: 'Module' }),
          Object.defineProperty(t, '__esModule', { value: !0 });
      }),
      (r.t = function (t, e) {
        if ((1 & e && (t = r(t)), 8 & e)) return t;
        if (4 & e && 'object' == typeof t && t && t.__esModule) return t;
        var n = Object.create(null);
        if (
          (r.r(n),
          Object.defineProperty(n, 'default', { enumerable: !0, value: t }),
          2 & e && 'string' != typeof t)
        )
          for (var o in t)
            r.d(
              n,
              o,
              function (e) {
                return t[e];
              }.bind(null, o)
            );
        return n;
      }),
      (r.n = function (t) {
        var e =
          t && t.__esModule
            ? function () {
                return t.default;
              }
            : function () {
                return t;
              };
        return r.d(e, 'a', e), e;
      }),
      (r.o = function (t, e) {
        return Object.prototype.hasOwnProperty.call(t, e);
      }),
      (r.p = ''),
      r((r.s = 1))
    );
  })([
    function (t, e) {
      t.exports = function (t, e, r) {
        return (
          e in t
            ? Object.defineProperty(t, e, {
                value: r,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (t[e] = r),
          t
        );
      };
    },
    function (t, e, r) {
      'use strict';
      r.r(e);
      var n = r(0),
        o = r.n(n),
        i = 'edit-script';
      function c(t, e) {
        var r = Object.keys(t);
        if (Object.getOwnPropertySymbols) {
          var n = Object.getOwnPropertySymbols(t);
          e &&
            (n = n.filter(function (e) {
              return Object.getOwnPropertyDescriptor(t, e).enumerable;
            })),
            r.push.apply(r, n);
        }
        return r;
      }
      function a(t) {
        for (var e = 1; e < arguments.length; e++) {
          var r = null != arguments[e] ? arguments[e] : {};
          e % 2
            ? c(Object(r), !0).forEach(function (e) {
                o()(t, e, r[e]);
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r))
            : c(Object(r)).forEach(function (e) {
                Object.defineProperty(
                  t,
                  e,
                  Object.getOwnPropertyDescriptor(r, e)
                );
              });
        }
        return t;
      }
      var s = function (t) {
        var e =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
          r = t.Commands,
          n = t.Modal,
          o = t.Components,
          c = e.modalTitle,
          s = e.codeViewOptions,
          u = e.commandAttachScript,
          l = e.toolbarIcon,
          p = e.onRun,
          d = e.onError,
          f = e.starter,
          b = e.scriptTypesSupport,
          g = null,
          xy = null,
          h = function (t, e) {
            e instanceof HTMLElement
              ? t.appendChild(e)
              : e && t.insertAdjacentHTML('beforeend', e);
          };
        t.$.isString(b) && (b = b.split(',')),
          t.$.isArray(b) &&
            (b = b.includes('*')
              ? o.getTypes().map(function (t) {
                  return t.id;
                })
              : b),
          b &&
            b.forEach(function (t) {
              var r = o.getType(t).model;
              // o.addType(t, {
              //   model: {
              //     initToolbar: function () {
              //       r.prototype.initToolbar.apply(this, arguments);
              //       var t = this.get('toolbar'),
              //         n = t.some(function (t) {
              //           return t.command === i;
              //         });
              //       n ||
              //         (t.unshift(
              //           a({ command: i, label: l }, e.toolbarBtnCustomScript)
              //         ),
              //         this.set('toolbar', t));
              //     },
              //   },
              // });
            }),
          r.add(
            i,
            a(
              {
                run: function (t, e) {
                  var r =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : {};
                  (this.editor = t),
                    (this.options = r),
                    (this.target = r.target || t.getSelected());
                  var n = this.target;
                  n && this.showCustomCode(n, r);
                },
                stop: function (t) {
                  document.removeEventListener('keypress', xy);
                  n.close();
                },
                showCustomCode: function (t, options) {
                  var e = this,
                    r = this.editor,
                    o = this.options.title || c;
                  g || (g = this.getContent());
                  var i = options.logic || f;

                  n
                    .open({ title: o, content: g })
                    .getModel()
                    .once('change:open', function () {
                      return r.stopCommand(e.id);
                    }),
                    this.getCodeViewer().setContent(i);
                  if (options.name !== '&#43 New Handler') {
                    document.getElementById('x').value = options.name;
                  } else {
                    document.getElementById('x').value = '';
                  }
                },
                getPreContent: function () {
                  var e = document.createElement('div');
                  e.id = 'Handler-name';
                  var inputLabel = document.createElement('label');
                  inputLabel.classList.add('inl');
                  inputLabel.style.marginRight = '10px';
                  var input = document.createElement('input');
                  input.id = 'x';
                  input.autocomplete = 'off';
                  inputLabel.textContent = 'Handler Name:';
                  var y = document.createElement('div');
                  y.classList.add('gjs-field');
                  y.classList.add('gjs-field-text');
                  y.style.height = 'fit-content';
                  y.style.borderRadius = '10px';
                  inputLabel.htmlFor = input.id;
                  var div = document.createElement('div');
                  div.style.display = 'flex';
                  y.appendChild(input);
                  div.appendChild(inputLabel);
                  div.appendChild(y);
                  div.style.height = '35px';
                  div.style.alignItems = 'center';
                  return e.appendChild(div), e;
                },
                getPostContent: function () {},
                getContent: function () {
                  var e = this.editor,
                    t = document.createElement('div'),
                    n = document.createElement('div');
                  n.className = 'modal';
                  n.id = 'messageModal';
                  r = e.getConfig('stylePrefix');
                  n.innerHTML = `
                     <div class ="fa fa-circle-exclamation"></div>
                      <div class="modal-content">
                        <p id ="messageText"></p>
                        <button id="okButton">OK</button>
                      </div>`;
                  (t.className = ''.concat(r, 'attach-script')),
                    h(t, this.getPreContent());
                  var c = this.getCodeViewer();
                  return (
                    c.refresh(),
                    setTimeout(function () {
                      return n.focus();
                    }, 0),
                    t.appendChild(c.getElement()),
                    t.appendChild(n),
                    h(t, this.getPostContent()),
                    h(t, this.getContentActions()),
                    t
                  );
                },
                getContentActions: function () {
                  var t = this,
                    r = this.editor,
                    n = document.createElement('div');
                  n.id = 'actns';
                  var o = document.createElement('button'),
                    i = r.getConfig('stylePrefix');
                  (o.innerHTML = e.buttonLabel),
                    (o.className = ''
                      .concat(i, 'btn-prim ')
                      .concat(i, 'btn-save__inject-logic')),
                    (o.onclick = function () {
                      return t.handleSave();
                    });
                  var c = document.createElement('div');
                  return (
                    (c.id = 'logic-toolbar'),
                    (c.className = 'fa fa-bug'),
                    (c.style =
                      'margin:5px;padding:10px;background:rgba(0,0,0,0.2);border-radius:3px;border:1px solid rgba(0,0,0,0.2);cursor:pointer'),
                    (c.onclick = function () {
                      return t.runCode();
                    }),
                    n.appendChild(c),
                    n.appendChild(o),
                    n
                  );
                },
                handleSave: function () {
                  let status =
                    this.options.name !== '&#43 New Handler' ? 'NotNew' : 'New';
                  let m = document.getElementById('x').value;
                  let n = this.getCodeViewer().getContent();
                  let handlersCount = this.em.Events.handlers.filter(
                    (handler) => handler.logic != undefined
                  ).length;
                  const handlerNames = this.em.Events.handlers.map(
                    (handler) => handler.name
                  );
                  let hid =
                    status === 'New'
                      ? handlersCount + 1
                      : this.options.handlerId;

                  if (!m) {
                    m = `New Handler ${handlersCount}`;
                  }

                  if (
                    (status === 'New' && !handlerNames.includes(m)) ||
                    status === 'NotNew'
                  ) {
                    let h = {
                      handlerId: hid,
                      name: m,
                      value: m.replace(/\s/g, ''),
                      logic: n,
                    };
                    let e = this.editor,
                      t = this.target,
                      o = this;
                    document.getElementById('x').value = '';
                    e.Modal.close();
                    document.removeEventListener('keypress', xy);
                    this.fcs(this.target, h);
                  } else {
                    this.showErrorMessage('This Handler name already exists');
                  }
                },
                fcs: function (uu, h) {
                  uu.get('events').models[0].addHandler(h);
                },
                getCodeViewer: function () {
                  var t = this.editor;
                  return (
                    this.codeViewer ||
                      (this.codeViewer = t.CodeManager.createViewer(
                        a(
                          {
                            codeName: 'javascript',
                            theme: 'hopscotch',
                            readOnly: 0,
                            autoBeautify: 1,
                          },
                          s
                        )
                      )),
                    this.codeViewer
                  );
                },
                runCode: function () {
                  try {
                    var t = this.getCodeViewer().getContent();
                    Function('"use strict";' + t)(), p && p();
                  } catch (t) {
                    console.log('error', t), d && d(t);
                  }
                },
              },
              u
            )
          );
      };
      function u(t, e) {
        var r = Object.keys(t);
        if (Object.getOwnPropertySymbols) {
          var n = Object.getOwnPropertySymbols(t);
          e &&
            (n = n.filter(function (e) {
              return Object.getOwnPropertyDescriptor(t, e).enumerable;
            })),
            r.push.apply(r, n);
        }
        return r;
      }
      function l(t) {
        for (var e = 1; e < arguments.length; e++) {
          var r = null != arguments[e] ? arguments[e] : {};
          e % 2
            ? u(Object(r), !0).forEach(function (e) {
                o()(t, e, r[e]);
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r))
            : u(Object(r)).forEach(function (e) {
                Object.defineProperty(
                  t,
                  e,
                  Object.getOwnPropertyDescriptor(r, e)
                );
              });
        }
        return t;
      }
      e.default = function (t) {
        var e =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
          r = l(
            l(
              {},
              {
                starter: 'let el = this;',
                toolbarIcon: '<i class="fa fa-file-code-o"></i>',
                scriptTypesSupport: [
                  'default',
                  'wrapper',
                  'text',
                  'textnode',
                  'image',
                  'video',
                  'svg',
                ],
                toolbarBtnCustomScript: {},
                onRun: function () {
                  return console.log('valid syntax');
                },
                onError: function (t) {
                  return console.log('error', t);
                },
                modalTitle: 'Script',
                codeLabel: 'JS',
                codeViewOptions: {},
                buttonLabel: 'Save',
                commandAttachScript: {},
              }
            ),
            e
          );
        s(t, r);
      };
    },
  ]);
});
